<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Some thoughts]]></title>
  <link href="http://burningTyger.github.com/atom.xml" rel="self"/>
  <link href="http://burningTyger.github.com/"/>
  <updated>2013-01-06T20:43:51+01:00</updated>
  <id>http://burningTyger.github.com/</id>
  <author>
    <name><![CDATA[burningTyger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hassle free secure tokens on Openshift]]></title>
    <link href="http://burningTyger.github.com/blog/2013/01/06/hassle-free-secure-tokens-on-openshift/"/>
    <updated>2013-01-06T13:01:00+01:00</updated>
    <id>http://burningTyger.github.com/blog/2013/01/06/hassle-free-secure-tokens-on-openshift</id>
    <content type="html"><![CDATA[<p><a href="https://openshift.redhat.com">Openshift</a> makes extensive use of env
vars that can be used by your apps. This is really useful for creating
generic repositories like <a href="https://github.com/openshift">Quickstarts</a>.</p>

<p>You create an app, everybody who likes it pulls it into their Openshift
repository and deploys it. Usually everything is ok but
<a href="https://openshift.redhat.com/community/developers/get-involved/creating-quickstarts">sometimes</a>
you need to create a secure token to have an extra layer of security.</p>

<p>For my Openshift <a href="https://github.com/burningTyger/openshift_moodle">Moodle Quickstart</a> I needed a
secure token to <a href="https://github.com/burningTyger/openshift_moodle/blob/master/config/config.php#L73">salt passwords</a>.
I didn&#8217;t want to create a config file that needs to be manually changed
by the user so I thought of something else:</p>

<pre><code>export OPENSHIFT_SECURE_TOKEN="$(ruby -e "
  require 'securerandom'
  if File.exist? 'token'
    token = File.open('token').read
  else
    token = SecureRandom.base64(64)
    File.open('token', 'w') { |file| file.write(token) }
  end
  puts token
")"
</code></pre>

<p>This little script goes into one of the <code>action_hooks</code> that are sourced
by the app.</p>

<p>In case of my Moodle repo I put it into
<code>.openshift/action_hooks/pre_start_php-5.3</code>. For other apps you will
have to use the appropriate cartridge name instead(i.e ruby-1.9 etc.).</p>

<p>What this script does it runs an inline Ruby script that checks if a
token file exists in your data dir and reads it. If not, it creates one
and writes a random string into it.</p>

<p>After that it writes the string to STDOUT when it is set to
<code>OPENSHIFT_SECURE_TOKEN</code>. This is the env var that you can then use in
your app&#8217;s config files without manually entering a string yourself.</p>

<p>If you need to migrate your app from somewhere else to Openshift you can
still use this script and just set via SSH the string in <code>token</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing a custom translation for Instructure's Canvas]]></title>
    <link href="http://burningTyger.github.com/blog/2013/01/04/installing-a-custom-translation-for-instructures-canvas/"/>
    <updated>2013-01-04T00:14:00+01:00</updated>
    <id>http://burningTyger.github.com/blog/2013/01/04/installing-a-custom-translation-for-instructures-canvas</id>
    <content type="html"><![CDATA[<p>You can find their repos here over at @instructure. Canvas is an
interesting Ruby on Rails Learning management system that looks a lot
cleaner than Moodle. It&#8217;s still 1.8 only and running on rails 2.3 but
still promising. Provided with the default language English there is
Spanish and Russian available.</p>

<p>If you want to add your own translation first check if there is already
a complete translation available over at
<a href="https://www.transifex.com/projects/p/canvas-lms/">Transifex</a> the
translation community. Right now there are some other languages
available, German for example is complete. You can download a
translation and use it in your project.</p>

<p>German example:</p>

<p>rename the file to de.yml and place it in your locale folder</p>

<pre><code>cp de.yml canvas/config/locales/
</code></pre>

<p>edit the locales.yml file so that it looks like this:</p>

<pre><code>en:
  locales:
    en: English
es:
  locales:
    es: Español
ru:
  locales:
    ru: ру́сский
de:
  locales:
    de: Deutsch
</code></pre>

<p>after that you need to restart your app and set the language to German
in your site settings.</p>
]]></content>
  </entry>
  
</feed>
